function Mouse.init 0
push constant 1
pop static 0
push constant 2
pop static 1
push constant 3
pop static 2
push constant 4
pop static 3
push constant 16
pop static 4
push constant 0
return
function Mouse.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push constant 240
pop this 0
push constant 112
pop this 1
push pointer 0
call Mouse.draw 1
pop temp 0
push pointer 0
return
function Mouse.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Mouse.getX 0
push argument 0
pop pointer 0
push this 0
return
function Mouse.getY 0
push argument 0
pop pointer 0
push this 1
return
function Mouse.blockPushedUpwards 1
push argument 0
pop pointer 0
push constant 16384
push constant 32
push this 1
push constant 16
sub
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
pop local 0
push local 0
call Memory.peek 1
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Mouse.catCantMoveUp 1
push argument 0
pop pointer 0
push constant 16384
push constant 32
push this 3
push constant 16
sub
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
pop local 0
push local 0
call Memory.peek 1
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Mouse.canMoveUpwards 1
push argument 0
pop pointer 0
push this 1
push constant 16
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
neg
return
label IF_FALSE0
push pointer 0
call Mouse.blockPushedUpwards 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
push constant 32
sub
pop this 3
push constant 16384
push constant 32
push this 3
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
pop local 0
label WHILE_EXP0
push this 3
push constant 1
neg
gt
push local 0
call Memory.peek 1
push constant 1
neg
eq
and
not
if-goto WHILE_END0
push this 3
push constant 16
sub
pop this 3
push this 3
push constant 1
neg
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 16384
push constant 32
push this 3
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
pop local 0
label IF_FALSE2
goto WHILE_EXP0
label WHILE_END0
push this 3
push constant 1
neg
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Mouse.blockMovedCat 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 3
push constant 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 2
neg
return
label IF_FALSE5
push pointer 0
call Mouse.catCantMoveUp 1
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 2
neg
return
label IF_FALSE6
label IF_FALSE4
push this 3
return
label IF_FALSE3
push constant 2
neg
return
goto IF_END1
label IF_FALSE1
push constant 1
neg
return
label IF_END1
function Mouse.blockPushedDownwards 1
push argument 0
pop pointer 0
push constant 16384
push constant 32
push this 1
push constant 16
add
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
pop local 0
push local 0
call Memory.peek 1
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Mouse.catCantMoveDown 1
push argument 0
pop pointer 0
push constant 16384
push constant 32
push this 3
push constant 16
add
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
pop local 0
push local 0
call Memory.peek 1
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Mouse.canMoveDownwards 1
push argument 0
pop pointer 0
push this 1
push constant 239
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
neg
return
label IF_FALSE0
push pointer 0
call Mouse.blockPushedDownwards 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
push constant 32
add
pop this 3
push this 3
push constant 240
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 2
neg
return
label IF_FALSE2
push constant 16384
push constant 32
push this 3
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
pop local 0
label WHILE_EXP0
push this 3
push constant 241
lt
push local 0
call Memory.peek 1
push constant 1
neg
eq
and
not
if-goto WHILE_END0
push this 3
push constant 16
add
pop this 3
push this 3
push constant 241
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 16384
push constant 32
push this 3
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
pop local 0
label IF_FALSE3
goto WHILE_EXP0
label WHILE_END0
push this 3
push constant 241
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
call Mouse.blockMovedCat 1
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 3
push constant 240
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 2
neg
return
label IF_FALSE6
push pointer 0
call Mouse.catCantMoveDown 1
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 2
neg
return
label IF_FALSE7
label IF_FALSE5
push this 3
return
label IF_FALSE4
push constant 2
neg
return
goto IF_END1
label IF_FALSE1
push constant 1
neg
return
label IF_END1
function Mouse.blockPushedLeftwards 1
push argument 0
pop pointer 0
push constant 16384
push constant 32
push this 1
call Math.multiply 2
add
push this 0
push constant 16
sub
push constant 16
call Math.divide 2
add
pop local 0
push local 0
call Memory.peek 1
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Mouse.catCantMoveLeft 1
push argument 0
pop pointer 0
push constant 16384
push constant 32
push this 1
call Math.multiply 2
add
push this 2
push constant 16
sub
push constant 16
call Math.divide 2
add
pop local 0
push local 0
call Memory.peek 1
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Mouse.canMoveLeftwards 1
push argument 0
pop pointer 0
push this 0
push constant 16
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
neg
return
label IF_FALSE0
push pointer 0
call Mouse.blockPushedLeftwards 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push constant 32
sub
pop this 2
push constant 16384
push constant 32
push this 1
call Math.multiply 2
add
push this 2
push constant 16
call Math.divide 2
add
pop local 0
push local 0
push constant 16384
push constant 32
push this 1
push constant 1
sub
call Math.multiply 2
add
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
label WHILE_EXP0
push this 2
push constant 1
neg
gt
push local 0
call Memory.peek 1
push constant 1
neg
eq
and
not
if-goto WHILE_END0
push this 2
push constant 16
sub
pop this 2
push constant 16384
push constant 32
push this 1
call Math.multiply 2
add
push this 2
push constant 16
call Math.divide 2
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE2
push this 2
push constant 1
neg
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Mouse.blockMovedCat 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 2
push constant 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 2
neg
return
label IF_FALSE5
push pointer 0
call Mouse.catCantMoveLeft 1
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 2
neg
return
label IF_FALSE6
label IF_FALSE4
push this 2
return
label IF_FALSE3
push constant 2
neg
return
goto IF_END1
label IF_FALSE1
push constant 1
neg
return
label IF_END1
function Mouse.blockPushedRightwards 1
push argument 0
pop pointer 0
push constant 16384
push constant 32
push this 1
call Math.multiply 2
add
push this 0
push constant 16
add
push constant 16
call Math.divide 2
add
pop local 0
push local 0
call Memory.peek 1
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Mouse.catCantMoveRight 1
push argument 0
pop pointer 0
push constant 16384
push constant 32
push this 1
call Math.multiply 2
add
push this 2
push constant 16
add
push constant 16
call Math.divide 2
add
pop local 0
push local 0
call Memory.peek 1
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Mouse.canMoveRightwards 1
push argument 0
pop pointer 0
push this 0
push constant 495
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
neg
return
label IF_FALSE0
push pointer 0
call Mouse.blockPushedRightwards 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push constant 32
add
pop this 2
push constant 16384
push constant 32
push this 1
call Math.multiply 2
add
push this 2
push constant 16
call Math.divide 2
add
pop local 0
push local 0
push constant 16384
push constant 32
push this 1
push constant 1
add
call Math.multiply 2
add
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
label WHILE_EXP0
push this 2
push constant 513
lt
push local 0
call Memory.peek 1
push constant 1
neg
eq
and
not
if-goto WHILE_END0
push this 2
push constant 16
add
pop this 2
push constant 16384
push constant 32
push this 1
call Math.multiply 2
add
push this 2
push constant 16
call Math.divide 2
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE2
push this 2
push constant 497
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Mouse.blockMovedCat 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 2
push constant 496
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 2
neg
return
label IF_FALSE5
push pointer 0
call Mouse.catCantMoveRight 1
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 2
neg
return
label IF_FALSE6
label IF_FALSE4
push this 2
return
label IF_FALSE3
push constant 2
neg
return
goto IF_END1
label IF_FALSE1
push constant 1
neg
return
label IF_END1
function Mouse.draw 1
push argument 0
pop pointer 0
push constant 16384
push constant 32
push this 1
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
pop local 0
push local 0
push constant 0
add
push constant 6
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 8
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 8
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 8
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 6534
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 9793
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 10337
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 4241
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 8457
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 18437
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 32765
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 1022
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 1026
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 2046
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 2577
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 4641
call Memory.poke 2
pop temp 0
push constant 0
return
function Mouse.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push static 4
add
push constant 1
sub
push this 1
push static 4
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Mouse.blockMovedCat 1
push argument 0
pop pointer 0
push this 5
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 16384
push constant 32
push this 3
push constant 4
add
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
pop local 0
goto IF_END0
label IF_FALSE0
push constant 16384
push constant 32
push this 1
push constant 4
add
call Math.multiply 2
add
push this 2
push constant 16
call Math.divide 2
add
pop local 0
label IF_END0
push local 0
call Memory.peek 1
push constant 32255
neg
eq
push local 0
call Memory.peek 1
push constant 32256
neg
eq
or
push local 0
call Memory.peek 1
push constant 16382
eq
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push constant 0
return
function Mouse.pushedBlock 0
push argument 0
pop pointer 0
push this 4
return
function Mouse.drawPushedBlock 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 5
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push this 3
push this 0
push static 4
add
push constant 1
sub
push this 3
push static 4
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
label IF_FALSE0
push this 2
push this 1
push this 2
push static 4
add
push constant 1
sub
push this 1
push static 4
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Mouse.move 0
push argument 0
pop pointer 0
push constant 0
pop this 4
push constant 0
pop this 5
push argument 1
push static 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop this 5
push pointer 0
call Mouse.moveUp 1
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 1
push static 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 5
push pointer 0
call Mouse.moveDown 1
pop temp 0
push constant 0
return
label IF_FALSE1
push argument 1
push static 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Mouse.moveLeft 1
pop temp 0
push constant 0
return
label IF_FALSE2
push argument 1
push static 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Mouse.moveRight 1
pop temp 0
push constant 0
return
label IF_FALSE3
push constant 0
return
function Mouse.moveUp 0
push argument 0
pop pointer 0
push constant 0
pop this 4
push pointer 0
call Mouse.canMoveUpwards 1
pop this 3
push this 3
push constant 2
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 1
neg
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 4
label IF_FALSE1
push pointer 0
call Mouse.erase 1
pop temp 0
push this 1
push constant 16
sub
pop this 1
push pointer 0
call Mouse.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Mouse.moveDown 0
push argument 0
pop pointer 0
push constant 0
pop this 4
push pointer 0
call Mouse.canMoveDownwards 1
pop this 3
push this 3
push constant 2
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 1
neg
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 4
label IF_FALSE1
push pointer 0
call Mouse.erase 1
pop temp 0
push this 1
push constant 16
add
pop this 1
push pointer 0
call Mouse.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Mouse.moveLeft 0
push argument 0
pop pointer 0
push constant 0
pop this 4
push pointer 0
call Mouse.canMoveLeftwards 1
pop this 2
push this 2
push constant 2
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 1
neg
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 4
label IF_FALSE1
push pointer 0
call Mouse.erase 1
pop temp 0
push this 0
push constant 16
sub
pop this 0
push pointer 0
call Mouse.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Mouse.moveRight 0
push argument 0
pop pointer 0
push constant 0
pop this 4
push pointer 0
call Mouse.canMoveRightwards 1
pop this 2
push this 2
push constant 2
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 1
neg
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 4
label IF_FALSE1
push pointer 0
call Mouse.erase 1
pop temp 0
push this 0
push constant 16
add
pop this 0
push pointer 0
call Mouse.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
